/* The CSS for the main page */

.editor-page
{
    /* Centre horizontally and vertically */
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-evenly; /* Centres horizontally when there's no second editor */
    align-items: center;
    text-align: center;
    width: 100%;
    flex-grow: 1; /* Basically height: 100% but doesn't mess up the header and footer */
    scrollbar-gutter: stable both-edges; /*Prevents scrollbar from shifting everything when it appears*/
    overflow-y: auto; /* Scrollbar only appears when needed */
}

.editor-grid
{
    display: grid;
    grid-template-columns: auto auto auto auto 12rem auto;
    grid-template-rows: auto auto auto auto auto auto;
    grid-template-areas:  /* TODO: Put back trainerName */
        "topLeft quickButtons quickButtons quickButtons quickButtons topRight"
        "topLeft trainerName trainerName trainerName trainerName topRight"
        "colourButton textAreaMain textAreaMain textAreaMain textAreaMain undoButtons"
        "lockButton textAreaMain textAreaMain textAreaMain textAreaMain bottomRight"
        "bottomLeft textAreaSub textAreaSub textAreaSub textAreaSub bottomRight"
        "bottomLeft prettifier lockMobile undoMobile spaceCount bottomRight"
        "bottomLeft translator translator translator translator bottomRight";

    /*Background around editor*/
    margin-top: 1rem;
    margin-bottom: 1rem;
    width:  fit-content;
    height: fit-content;
    padding: 1.5rem;
    border-radius: 1rem;
    box-shadow: var(--bs-box-shadow-lg) !important;
    background-color: white;
}

[data-darkreader-scheme="dark"] #editor-grid, [data-darkreader-scheme="dark"] #editor-grid-translate
{
    background-color: #2c2c2c !important;
}


/* Buttons on Top */

.quick-buttons
{
    display: flex;
    grid-area: quickButtons;
}

.quick-button
{
    border-radius: 0px !important;
    font-size: 0.9rem !important;
    height: fit-content !important;
}


/* Text Areas */

.fr-text
{
    font-family: "Pokemon Fire Red", monospace !important;
    font-size: 2rem !important;
    font-size-adjust: 0.312; /* So the fallback text is the same size as the original font */
    line-height: 2rem !important;
    word-spacing: 0.5rem !important;
    letter-spacing: -0.5px !important;
}

.trainer-name-input
{
    grid-area: trainerName;
    padding-top: 0.5rem !important;
    padding-bottom: 0.5rem !important;
    margin-bottom: 5px;
    overflow-y: hidden !important;
    overflow-x: auto !important;
}

.main-textarea-container
{
    grid-area: textAreaMain;
    margin-bottom: 1px;
}

.main-textarea
{
    /* Transparent text but not transparent cursor */
    position: relative;
    color: transparent !important;
    caret-color: black !important;
}

.top-textarea
{
    z-index: 1 !important;
    background: transparent !important;
}

.mirror-textarea
{
    position: absolute; /* Attach to the textarea */
    text-align: left;
    border-color: transparent !important;
    pointer-events: none; /* So clicks go through */
}

.main-textarea-container .main-textarea::selection
{
    color: transparent !important; /* Prevent the non-coloured text from appearing when selected */
}

[data-darkreader-scheme="dark"] .main-textarea::selection
{
    /* Fix dark mode text selection colour */
    --darkreader-text-ffffff: transparent;
}

[data-darkreader-scheme="dark"] ::selection
{
    /* Fix dark mode text selection background */
    --darkreader-background-0060d4: rgba(240, 240, 240, 0.1);
}

.converted-text
{
    cursor: copy;
    padding-top: 0px !important;
    overflow-y: hidden !important;
    overflow-x: auto !important;
    grid-area: textAreaSub;
}

textarea, .mirror-textarea
{
    resize: none !important;
    margin: 0;
    -webkit-appearance: none;
    padding: .78571429em 1em;
    background: #fff;
    border: 1px solid rgba(34,36,38,.15);
    outline: 0;
    color: rgba(0,0,0,.87);
    border-radius: .28571429rem;
    box-shadow: 0 0 0 0 transparent inset;
    transition: color .1s ease,border-color .1s ease;
    overflow-x: hidden;
}

textarea:focus
{
    color: rgba(0,0,0,.95);
    border-color: #85b7d9;
    border-radius: .28571429rem;
    background: #fff;
    box-shadow: 0 0 0 0 rgb(34 36 38 / 35%) inset;
    -webkit-appearance: none;
}

[data-darkreader-scheme="dark"] textarea
{
    color: white;
    background-color: #1a1a1a;
    border: 1px solid #444;
}

[data-darkreader-scheme="dark"] textarea:focus
{
    color: white;
    border-color: #85b7d9;
    background-color: #1a1a1a;
}


/* Buttons & Details Below */

.hidden-div
{
    visibility: hidden;
    position: fixed;
    top: 0;
    left: 0;
}

button, svg, .navbar-brand
{
    cursor: pointer;
    -webkit-touch-callout: none; /* iOS Safari */
    -webkit-user-select: none; /* Safari */
     -khtml-user-select: none; /* Konqueror HTML */
       -moz-user-select: none; /* Old versions of Firefox */
        -ms-user-select: none; /* Internet Explorer/Edge */
            user-select: none; /* Non-prefixed version, currently
                                  supported by Chrome, Edge, Opera and Firefox */
}

.prettify-button
{
    padding-top: 0.25rem !important;
    padding-bottom: 0.25rem !important;
    margin-top: 0.5rem !important;
    grid-area: prettifier;
}

.translate-navbar
{
    color: white;
    border: solid 1px white;
    border-radius: .28571429rem;
    padding-left: 0.5rem;
    padding-right: 0.5rem;
    margin-top: 0.5rem !important;
    grid-area: translator;
}

.translate-navbar
{
    justify-content: space-between !important;
}

.translated-text-navbar
{
    justify-content: center !important;
    height: 4rem;
}

.translate-button-active, .translate-button-active:hover
{
    color: chartreuse;
}

[data-darkreader-scheme="dark"] .translate-navbar
{
    border-color: black !important;
}


/* Undo & Redo Buttons on Right */

.undo-redo-buttons
{
    display: flex;
    flex-direction: column;
    grid-area: undoButtons;
}

@media (max-width: 500px)
{
    /* Displayed if width is <= than 500px goes here */
    .editor-page
    {
        align-items: unset !important;
    }

    textarea
    {
        overflow-x: auto !important;
    }

    .undo-redo-buttons
    {
        flex-direction: row;
        margin: auto;
        grid-area: undoMobile !important;
        margin-bottom: 5px;
        margin-top: 5px;
    }

    .undo-redo-button
    {
        margin-bottom: 0px !important;
    }

    .lock-buttons
    {
        grid-area: lockMobile !important;
        justify-content: center !important;
    }

    .lock-button
    {
        margin-right: 0px !important;
    }

    .text-colour-dropdown
    {
        position: relative !important;
        right: 20px; /* Shift to the left */
        z-index: 2; /* Ensure it's on top of the text area */
        grid-area: textAreaMain !important;
    }
}

.undo-redo-button
{
    cursor: pointer;
    margin-left: 5px;
    margin-bottom: 10px;
    padding: 5px;
    border-radius: 0.25rem;
    color: white;
}

.active-undo-redo-button
{
    background-color: #0d6efd;
}

.active-undo-redo-button:hover
{
    background-color: #0b5ed7;
}

.disabled-undo-redo-button
{
    cursor: initial !important;
    background-color: #6c757d;
}


/* Lock Button On Left */

.lock-buttons
{
    display: flex;
    flex-direction: column;
    grid-area: lockButton;
    justify-content: flex-end;
}

.lock-button
{
    cursor: pointer;
    margin-right: 5px;
    padding: 5px;
    border-radius: 0.25rem;
    color: white;
}

.text-unlocked
{
    background-color: #dc3545;
}

.text-locked
{
    color: black;
    background-color: #ffc107;
}


/* Current Text Colour Button */

.text-colour-dropdown /* Applies to the container */
{
    margin-top: 20px;
    width: fit-content;
    height: fit-content;
    grid-area: colourButton;
}

#text-colour-dropdown /* Applies to the button inside the container */
{
    width: fit-content;
    font-size: 1.05rem;
    background-color: #ffc107;
    padding: 5px;
}

#text-colour-dropdown::after /* Remove the dropdown arrow */
{
    display: none;
}
